snippet bash
	#!/usr/bin/env bash
	set -o nounset
	set -o errexit

snippet bash2WithTrapFunc
	#!/usr/bin/env bash
	set -o nounset
	set -o errexit
	function finish
	{
		${1:#cleanup code}
	}
	trap finish EXIT

snippet bash3WithScriptVars
	#!/usr/bin/env bash
	set -o nounset
	set -o errexit
	SCRIPTNAME="$(basename \$0)"
	SCRIPT_PATH="\`dirname \"\$0\"\`"
	INCLUDE_DIR="${1:Script}-Include"
	INCLUDE_PATH="${SCRIPT_PATH}/${INCLUDE_DIR}"
	. "${INCLUDE_PATH}/$1Config.sh"

snippet bashCondDirExists
	[ -d "${1:/path/to/dir}" ] && echo "Directory $1 exists."

snippet bashCondDirDoesntExists
	[ ! -d "${1:/path/to/dir}" ] && echo "Directory $1 does not exists."

snippet ignore_failing_command
if ! ${1:<possible failing command>} ; then
    echo "failure ignored"
fi

snippet bashDebug
	set -o xtrace //trace what gets executed

snippet nounset
	set -o nounset //exit when undeclared variable is used

snippet errexit
	set -o errexit //exit when a command fails.

snippet bashVars
	# Set magic variables for current file & dir
	__dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
	__file="${__dir}/$(basename "${BASH_SOURCE[0]}")"
	__base="$(basename ${__file} .sh)"
	__root="$(cd "$(dirname "${__dir}")" && pwd)" # <-- change this

